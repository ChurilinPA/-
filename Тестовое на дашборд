WITH RankedMessages AS (
    SELECT
        entity_id,
        created_by,
        created_at,
        type,
        ROW_NUMBER() OVER (PARTITION BY entity_id, created_by ORDER BY created_at) AS rn
    FROM test.chat_messages
),
FilteredMessages AS (
    SELECT
        rm1.entity_id,
        rm2.created_by,
        rm1.created_at AS message_time,
        rm2.created_at AS response_time
    FROM RankedMessages rm1
    JOIN RankedMessages rm2 ON rm1.entity_id = rm2.entity_id
        AND rm1.type = 'incoming_chat_message' AND rm2.type = 'outgoing_chat_message'
        AND rm1.rn = 1 AND rm2.rn = 1
        AND rm2.created_at > rm1.created_at
),
TimeDiff AS (
    SELECT
        entity_id,
        created_by,
        message_time,
        response_time,
        EXTRACT(EPOCH FROM (TO_TIMESTAMP(response_time) - TO_TIMESTAMP(message_time))) AS time_diff
    FROM FilteredMessages
),
AdjustedTime AS (
    SELECT
        entity_id,
        created_by,
        message_time,
        response_time,
        time_diff,
        CASE
            WHEN EXTRACT(HOUR FROM TO_TIMESTAMP(message_time)) < 9 OR (EXTRACT(HOUR FROM TO_TIMESTAMP(message_time)) = 9 AND EXTRACT(MINUTE FROM TO_TIMESTAMP(message_time)) < 30) THEN
                CASE
                    WHEN EXTRACT(HOUR FROM TO_TIMESTAMP(response_time)) >= 9 AND EXTRACT(HOUR FROM TO_TIMESTAMP(response_time)) < 24 THEN
                        EXTRACT(EPOCH FROM (TO_TIMESTAMP(response_time) - TO_TIMESTAMP(message_time + (9 * 3600 - EXTRACT(MINUTE FROM TO_TIMESTAMP(message_time)) * 60))))
                    ELSE
                        EXTRACT(EPOCH FROM (TO_TIMESTAMP(response_time + 24 * 3600) - TO_TIMESTAMP(message_time + (9 * 3600 - EXTRACT(MINUTE FROM TO_TIMESTAMP(message_time)) * 60))))
                END
            WHEN EXTRACT(HOUR FROM TO_TIMESTAMP(message_time)) >= 24 THEN
                CASE
                    WHEN EXTRACT(HOUR FROM TO_TIMESTAMP(response_time)) >= 9 AND EXTRACT(HOUR FROM TO_TIMESTAMP(response_time)) < 24 THEN
                        EXTRACT(EPOCH FROM (TO_TIMESTAMP(response_time) - TO_TIMESTAMP(message_time + (9 * 3600 - EXTRACT(MINUTE FROM TO_TIMESTAMP(message_time)) * 60))))
                    ELSE
                        EXTRACT(EPOCH FROM (TO_TIMESTAMP(response_time + 24 * 3600) - TO_TIMESTAMP(message_time + (9 * 3600 - EXTRACT(MINUTE FROM TO_TIMESTAMP(message_time)) * 60))))
                END
            WHEN EXTRACT(HOUR FROM TO_TIMESTAMP(message_time)) >= 9 AND EXTRACT(HOUR FROM TO_TIMESTAMP(message_time)) < 24 THEN
                CASE
                    WHEN EXTRACT(HOUR FROM TO_TIMESTAMP(response_time)) < 9 THEN
                        EXTRACT(EPOCH FROM (TO_TIMESTAMP(response_time + 24 * 3600) - TO_TIMESTAMP(message_time)))
                    ELSE
                        time_diff
                END
            ELSE time_diff
        END AS adjusted_time_diff
    FROM TimeDiff
),
ManagerAverages AS (
    select
    	m.rop_id::int,
        m.name_mop,
        ROUND(AVG(at.adjusted_time_diff), 3) AS average_response_time,
        DATE(TO_TIMESTAMP(at.message_time)) as message_date
    FROM AdjustedTime at
    JOIN test.managers m ON at.created_by = m.mop_id
    GROUP BY m.name_mop, m.rop_id, DATE(TO_TIMESTAMP(at.message_time))
)
select  ma.name_mop, 
		ma.rop_id, 
		t.rop_name, 
		ma.average_response_time, 
		ma.message_date
from ManagerAverages ma 
join test.rops t on ma.rop_id = t.rop_id 
order by ma.average_response_time desc
